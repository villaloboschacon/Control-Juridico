@model PagedList.IPagedList<BackEnd.Model.Persona>
@using PagedList.Mvc;
@{

    ViewBag.Title = "Index";
}

<head>
    <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
    <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>

    <link type="text/css" href="//code.jquery.com/ui/1.11.3/themes/smoothness/jquery-ui.css" rel="stylesheet" />
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
    <script src="~/Scripts/jquery-ui-1.12.1.js"></script>
    @*SCRIPT PARA EL EDITOR DE TEXTO*@
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
    <link href="http://code.jquery.com/ui/1.10.2/themes/smoothness/jquery-ui.css" rel="Stylesheet"></>
    <script src="http://code.jquery.com/ui/1.10.2/jquery-ui.js"></script>

    <script src="~/Scripts/jquery-3.3.1.js"></script>
    <script src="~/Scripts/jquery-ui-1.12.1.js"></script>
    <script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>

    <script type="text/javascript" src="//code.jquery.com/jquery-1.11.3.min.js"></script>
</head>

<div class="title">Personas Jurídicas</div>
<div class="container" style="margin-top:20px">
    @using (Html.BeginForm("Index", "PersonaJuridica", FormMethod.Get))
    {
        <div class="widget">
            <span class="form-inline">
                @{ List<SelectListItem> searchListItem = new List<SelectListItem>();
                    searchListItem.Add(new SelectListItem { Text = "Cédula Jurídica", Value = "Cédula Jurídica" });
                    searchListItem.Add(new SelectListItem { Text = "Nombre Completo", Value = "Nombre Completo" });
                    searchListItem.Add(new SelectListItem { Text = "Representante Legal", Value = "Representante Legal" });
                    searchListItem.Add(new SelectListItem { Text = "Representante Social", Value = "Representante Social" });
                    searchListItem.Add(new SelectListItem { Text = "Correo Electrónico", Value = "Correo Electrónico" });

                }
                @Html.DropDownList("option", new SelectList(searchListItem, "Value", "Text"), "Opciones de Búsqueda", htmlAttributes: new { @class = "form-control", @style = "width:205px;", @onchange = "Limpiar()" })
                @Html.TextBox("search", "", new { @class = "form-control", autocomplete = "off" })
                <button type="submit" class="btn btn-default" value="Buscar" style="color:black; font-size:14px;">
                    <i class="fa fa-search" aria-hidden="true"></i> Buscar
                </button>
            </span>
        </div>
    }

    <table class="table table-bordered" id="table_personas">
        <tr>
            <th>
                Cédula
            </th>
            <th>
                Nombre Completo
            </th>
            <th>Representante legal</th>
            <th>Representante social</th>
            <th>Correo</th>

        </tr>
        @if (Model.Count() == 0)
        {
            <tr>
                <td align="center" colspan="8">No se encontraron coincidencias</td>
            </tr>
        }
        else
        {
            foreach (var item in Model)
            {
                <tr>
                    <td style="display:none;">
                        @Html.DisplayFor(modelItem => item.idPersona)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.cedula)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.nombreCompleto)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.RepresentanteLegal)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.RepresentanteSocial)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.correo)
                    </td>
                    @*<td>
                            @Html.DisplayFor(modelItem => item.observacion)
                        </td>*@
                </tr>
            }
        }
    </table>
    <div>
        <a href="#" onclick="Crear()" class="btnEdit" data-toggle="modal" data-target="#crearModal" id="btnEdit">Crear persona</a>
        @*<a href="#" onclick="Reference()" class="btnEdit" data-toggle="modal" data-target="#referenciaModal" id="btnEdit">Ref documento</a>*@
    </div>
    <br />

    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, pageSize = Model.PageSize, search = ViewBag.search, option = ViewBag.option }))
    <div class="modal fade" id="modalArchivar">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <a href="#" class="close" data-dismiss="modal">&times;</a>
                    <h3 class="modal-title">Eliminar Persona</h3>
                </div>
                <div class="modal-body">
                    <h4>Esta seguro que desea eliminar esta persona? </h4>

                    @*<div style="text-align:center;display:none" id="loaderDiv">
                            <img src="~/Content/InternetSlowdown_Day.gif" width="150" />
                        </div>*@

                </div>
                <div class="modal-footer">
                    <a href="#" class="btn btn-default" data-dismiss="modal">Cancelar</a>
                    <a href="#" class="btn btn-default" onclick="Archivar()">Confirmar</a>
                </div>

            </div>

        </div>

    </div>


    @*hidden field for storing current DocId*@
    <input type="hidden" id="idPersona" />
    <br />


</div>
<div id="editarModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="editarModal" aria-hidden="true" style="position: fixed" data-keyboard="false" data-backdrop="static">
</div>
<div id="crearModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="crearModal" aria-hidden="true" style="position: fixed" data-keyboard="false" data-backdrop="static">
</div>
<div id="detalleModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="detalleModal" aria-hidden="true" style="position: fixed" data-keyboard="false" data-backdrop="static">
</div>

<div id="contextMenu" class="dropdown clearfix">
    <ul class="dropdown-menu" role="menu" aria-labelledby="dropdownMenu" style="display:block;position:static;margin-bottom:5px;">
        <li>
            <a tabindex="-1" href="#" onclick="Details(getInd())" data-value="getInd()" data-toggle="modal" data-target="#detalleModal">Ver detalles</a>
        </li>
        <li class="divider"></li>
        <li>
            <a tabindex="-1" href="#" onclick="Edit(getInd())" data-value="getInd()" data-toggle="modal" data-target="#editarModal">Editar</a>
        </li>
        <li>
            <a href="#" onclick="Confirmar(getInd())">Eliminar</a>
        </li>
    </ul>
</div>
<style>
    #contextMenu {
        position: absolute;
        display: none;
        background: lightblue;
        z-index: 1000;
    }

    .wrap {
        width: 90%;
        display: block;
        margin: 0 auto;
    }

    table {
        border: 1px solid rgba(221, 221, 221, 1);
    }

    tr:nth-child(even) {
        background: #F5F5F5
    }

    tr {
        position: relative;
    }

        tr:hover {
            background: #c9e8f7;
            position: relative;
        }
</style>

<script>

    var ind = 0;
    $(this).mousedown(function (e) {
        if (e.which == 2) {
            alert('jaja');
            var rows = $('tr', table_documentos);
            ind = rows.eq($(this).index()).find("td:first").text();
            console(ind);
            return rows.eq($(this).index()).find("td:first").text();
        }
    });
    $('#table_personas').click(function () {
        $(this).addClass('highlight').siblings().removeClass('highlight');
        //do your stuff, you can use $(this) to get current cell
    });

    function Limpiar() {
        $('#search').val("")
    }

    $('#table_personas').find('tr').click(function (e) {
        var rows = $('tr', table_personas);
        ind = rows.eq($(this).index()).find("td:first").text();

        return rows.eq($(this).index()).find("td:first").text();
    });
    $vars = 0;
    $(function () {
        var $contextMenu = $("#contextMenu");
        $("body").on("contextmenu", "table tr", function (e) {
            var rows = $('tr', table_personas);
            ind = rows.eq($(this).index()).find("td:first").text();
            ind = ind.replace(/ /g, "");
            ind = ind.replace(/\s+/g, "");
            console.log(ind);
            $vars = ind;
            $contextMenu.css({
                display: "block",
                left: e.pageX,
                top: e.pageY
            });
            return false;
        });
        $('html').click(function () {
            $contextMenu.hide();
        });
    });
    function getInd() {
        console.log($vars);
        return $vars;
    };


    function Crear() {
        var url = '@Url.Action("Crear")';
        $.ajax({
            url: url,
            datatype: "json",
            type: "post",
            contenttype: 'application/json; charset=utf-8',
            async: true,
            success: function (data) {
                $("#crearModal").html(data);
            },
            error: function (xhr) {
                alert('Error a la hora de abrir el modal.');
            }
        });
    }

    function Edit(idpersona) {
        var url = '@Url.Action("Editar")';
        var myId = idpersona;
        $.ajax({
            url: url,
            datatype: "json",
            type: "post",
            data: {
                'id': idpersona
            },
            contenttype: 'application/json; charset=utf-8',
            async: true,
            success: function (data) {
                $("#editarModal").html(data);
            },
            error: function (xhr) {
                alert('error');
            }
        });
    }

    function Details(idpersona) {
        var url = '@Url.Action("Detalles")';
        var myId = idpersona;
        $.ajax({
            url: url,
            datatype: "json",
            type: "post",
            data: {
                'id': idpersona
            },
            contenttype: 'application/json; charset=utf-8',
            async: true,
            success: function (data) {
                $("#detalleModal").html(data);
            },
            error: function (xhr) {
                alert('error');
            }
        });
    }
    var Confirmar = function (idPersona) {

        $("#idPersona").val(idPersona);
        $('#modalArchivar').modal('show');
       // $("#myModal").show();// show();//('show');

    }

    var Archivar = function () {
        var url = '@Url.Action("Eliminar")';
        var myId = $("#idPersona").val();
        $.ajax({
            url: url,
            datatype: "json",
            type: "post",
            data: {
                'id': myId
            },
            success: function (result) {
                $("#modalArchivar").modal("hide");
                location.reload();

            }

        })

    }
</script>