@model SistemaControl.Models.PersonasViewModel
<meta charset="utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1">

<script src="~/Scripts/jquery-ui-1.12.1.js"></script>
<script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>

<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>

<div class="modal-dialog" role="document">
    <div class="modal-content">
        <div class="modal-header">
            <span class="modal-title" id="exampleModalLabel" style="text-align:center;">Crear Persona</span>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
        <div class="modal-body">
            <div id="contenidoModal">
                @using (Html.BeginForm("CrearPersona", "PersonaFisica"))
                {
                    @Html.AntiForgeryToken()
                    <div class="form-horizontal" id="parent">
                        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                        @Html.HiddenFor(model => model.idPersona)

                        <div class="form-group">
                            @Html.LabelFor(model => model.idTipo, "Tipo de Persona", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.DropDownList("idTipo", null, htmlAttributes: new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.idTipo, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group" id="cedula">
                            @Html.LabelFor(model => model.cedula, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.cedula, new { htmlAttributes = new { @class = "form-control", placeholder = "X-XXXX-XXXX" } })
                                @Html.ValidationMessageFor(model => model.cedula, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group" id="nombre">
                            @Html.LabelFor(model => model.nombreCompleto, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.nombreCompleto, new { htmlAttributes = new { @class = "form-control", placeholder = "NOMBRE APELLIDO APELLIDO" } })
                                @Html.ValidationMessageFor(model => model.nombreCompleto, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group" id="perJ">
                            @Html.LabelFor(model => model.representanteSocial, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.representanteSocial, new { htmlAttributes = new { @class = "form-control", placeholder = "NOMBRE APELLIDO APELLIDO" } })
                                @Html.ValidationMessageFor(model => model.representanteSocial, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group" id="personJ">
                            @Html.LabelFor(model => model.representanteLegal, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.representanteLegal, new { htmlAttributes = new { @class = "form-control", placeholder = "NOMBRE APELLIDO APELLIDO" } })
                                @Html.ValidationMessageFor(model => model.representanteLegal, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group" id="correo">
                            @Html.LabelFor(model => model.correo, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.correo, new { htmlAttributes = new { @class = "form-control", placeholder = "ejemplo@gmail.com/ejemplo@outlook.com" } })
                                @Html.ValidationMessageFor(model => model.correo, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.observacion, htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.TextAreaFor(model => model.observacion, 10, 62, new { htmlAttributes = new { @class = "form-control", @style = "resize: vertical;min-height: 200px;" } })
                                @Html.ValidationMessageFor(model => model.observacion, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div> @*form-horizontal*@

                    <div class="modal-footer">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Crear Persona" class="btn btn-primary" />
                            <button type="button" class="btn btn-default"><a style="color:black;" href="/PersonaFisica/Index">Cerrar</a></button>
                        </div>
                    </div>
                }
            </div> @*ContenidoModal*@
        </div> @*modal-body*@
    </div> @*modal-content*@
</div> @*modal-dialog*@

<script type="text/javascript">

    $(document).ready(function () {
        $("#perJ").hide();
        $("#personJ").hide();

    });

    $(document).change(function () {
        if ($('#idTipo').val() == "1") {
            $('#perJ').hide();
            $('#personJ').hide();
            $('#representanteLegal').val('');
            $('#representanteSocial').val('');
        } else if ($('#idTipo').val() == "2") {
            $('#perJ').show();
            $('#personJ').show();
        }
    });

    //Los nombres no poseen caracteres numericos o puntos, llaves, entre otras
    $('#nombre').keydown(function (e){
        var key = e.key;
        var code = e.keyCode;

        if (code == 16 && code >= 48 && code <= 57) { //Numeros abajo de los F
            swal("¡Carácter inválido!", 'No se permiten caracteres numéricos.', "error");
            event.preventDefault();
        } else if (code >= 96 && code <= 222) { // Numeros de la calculadora, +,-,*,/, llaves, comillas
            swal("¡Carácter inválido!", 'No se permiten caracteres numéricos.', "error");
            event.preventDefault();
        }
    });

    $('#cedula').keydown(function (e) {
        var key = e.key;
        var code = e.keyCode;

        if (code >= 65 && code <= 90) {
            swal("¡Carácter inválido!", 'No se permiten caracteres.', "error");
            event.preventDefault();
        } else if (code >= 106 && code <= 222) {
            swal("¡Carácter inválido!", 'No se permiten caracteres especiales.', "error");
            event.preventDefault();
        }
    });

    $('#perJ').keydown(function (e) {
        var key = e.key;
        var code = e.keyCode;

        if (code >= 48 && code <= 57) { //Numeros abajo de los F
            swal("¡Carácter inválido!", 'No se permiten caracteres numéricos.', "error");
            event.preventDefault();
        } else if (code >= 96 && code <= 222) { // Numeros de la calculadora, +,-,*,/, llaves, comillas
            swal("¡Carácter inválido!", 'No se permiten caracteres especiales.', "error");
            event.preventDefault();
        }
    });

    $('#personJ').keydown(function (e) {
        var key = e.key;
        var code = e.keyCode;

        if (code >= 48 && code <= 57) { //Numeros abajo de los F
            swal("¡Carácter inválido!", 'No se permiten caracteres numéricos.', "error");
            event.preventDefault();
        } else if (code >= 96 && code <= 222) { // Numeros de la calculadora, +,-,*,/, llaves, comillas
            swal("¡Carácter inválido!", 'No se permiten caracteres especiales.', "error");
            event.preventDefault();
        }
    });




</script>
