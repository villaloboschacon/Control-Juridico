@model SistemaControl.Models.PersonaViewModel
@Scripts.Render("~/bundles/jqueryval")

<div class="modal-dialog" role="document">
    <div class="modal-content">
        <div class="modal-header">
            <span class="modal-title" id="exampleModalLabel">Editar Persona</span>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
        <div class="modal-body">
            <div id="contenidoModal">
                @using (Html.BeginForm("EditarPersona", "PersonaFisica"))
                {
                    @Html.AntiForgeryToken()
                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.idPersona)

                    <div class="form-group">
                        @Html.LabelFor(model => model.idTipo, "Tipo de Persona", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("idTipo", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.idTipo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.tipoIdentificacion, "Tipo de Identificación", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("tipoIdentificacion", null, "Seleccione una opción.", htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.tipoIdentificacion, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.cedula, "Cédula:", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.cedula, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.cedula, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.nombreCompleto, "Nombre Completo:", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.nombreCompleto, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.nombreCompleto, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div id="juridica">
                        <div class="form-group">
                            @Html.LabelFor(model => model.representanteSocial, "Representante Social:", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.representanteSocial, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.representanteSocial, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.representanteLegal, "Representante Legal:", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.representanteLegal, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.representanteLegal, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>


                    <div class="form-group">
                        @Html.LabelFor(model => model.correo, "Correo:", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.correo, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.correo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.observacion, "Observación:", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.observacion, 10, 62, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.observacion, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                    <div class="modal-footer">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Actualizar persona" class="btn btn-default" />
                            <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {
        $('#juridica').hide();
    });
    $('#idTipo').change(function () {
        if ($('#idTipo').val() == "1") {
            $('#juridica').hide();
            $('#representanteLegal').val('');
            $('#representanteSocial').val('');
        }
        else if ($('#idTipo').val() == "2") {
            $('#juridica').show();
        }
    });

    //Los nombres no poseen caracteres numericos o puntos, llaves, entre otras
    $('#nombreCompleto').keypress(function (e) {
        var key = e.keyCode || e.which;

        teclado = String.fromCharCode(key).toLowerCase();

        letras = "qwertyuiopasdfghjklñzxcvbnm&-*/() ";

        especiales = "8-37-38-46-164";

        teclado_especial = false;

        for (var i in especiales) {
            if (key == especiales[i]) {
                teclado_especial = true;
                break;
            }
        }

        if (letras.indexOf(teclado) == -1 && !teclado_especial) {
            return false;
        }
    });

    $('#cedula').keydown(function (e) {
        if (e.key != 1 && e.key != 2 && e.key != 3 && e.key != 4 && e.key != 5 && e.key != 6 && e.key != 7 && e.key != 8 && e.key != 9 && e.key != 0 && e.key != 'Backspace' && e.keyCode != 32) {
            event.preventDefault();
        }
    });

    $('#representanteSocial').keypress(function (e) {
        var key = e.keyCode || e.which;

        teclado = String.fromCharCode(key).toLowerCase();

        letras = "qwertyuiopasdfghjklñzxcvbnm&-*/() ";

        especiales = "8-37-38-46-164";

        teclado_especial = false;

        for (var i in especiales) {
            if (key == especiales[i]) {
                teclado_especial = true;
                break;
            }
        }

        if (letras.indexOf(teclado) == -1 && !teclado_especial) {
            return false;
        }

    });

    $('#representanteLegal').keypress(function (e) {
        var key = e.keyCode || e.which;

        teclado = String.fromCharCode(key).toLowerCase();

        letras = "qwertyuiopasdfghjklñzxcvbnm&-*/() ";

        especiales = "8-37-38-46-164";

        teclado_especial = false;

        for (var i in especiales) {
            if (key == especiales[i]) {
                teclado_especial = true;
                break;
            }
        }

        if (letras.indexOf(teclado) == -1 && !teclado_especial) {
            return false;
        }
    });



</script>
