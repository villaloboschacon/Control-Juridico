@model SistemaControl.Models.DocumentoViewModel
@Scripts.Render("~/bundles/jqueryval")

<div class="modal-dialog" role="document">
    <div class="modal-content">
        <div class="modal-header">
            <span class="modal-title" id="exampleModalLabel">Detalle de oficio</span>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
        <div class="modal-body">
            <div id="contenidoModal">
                @using (Html.BeginForm("EditarDocumento", "Documento"))
                {
                    @Html.AntiForgeryToken()
                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.idDocumento)
                    <div class="form-group">
                        @Html.LabelFor(model => model.idTipo, "Tipo de Documento:", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("idTipo", null, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.idTipo, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.numeroDocumento, "Número de Oficio:", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.numeroDocumento, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                            @Html.ValidationMessageFor(model => model.numeroDocumento, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @if (Model.numeroIngreso != null)
                    {
                        <div class="form-group" id="numRef">
                            @Html.LabelFor(model => model.numeroIngreso, "Número de Ingreso:", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.numeroIngreso, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                                @Html.ValidationMessageFor(model => model.numeroIngreso, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    }
                    @if (Model.parte != null)
                    {
                        <div class="form-group">
                            @Html.LabelFor(model => model.parte, "Parte:", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.parte, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                                @Html.ValidationMessageFor(model => model.parte, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    }
                    <div class="form-group">
                        @Html.LabelFor(model => model.idEstado, "Estado de Documento:", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("idEstado", null, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.idEstado, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.tipoOrigen, "Tipo de origen:", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("tipoOrigen", null, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.tipoOrigen, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.idOrigen, "Origen:", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("idOrigen", null, htmlAttributes: new { @class = "form-control", @disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.idOrigen, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.fecha, "Fecha:", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextBoxFor(model => model.fecha, new { @type = "date", @class = "form-control datepicker", @disabled = "disabled", @Value = Model.fecha.ToString("yyyy-MM-dd") })
                            @Html.ValidationMessageFor(model => model.fecha, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.asunto, "Asunto:", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.asunto, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                            @Html.ValidationMessageFor(model => model.asunto, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.descripcion, "Descripción:", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.descripcion, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                            @Html.ValidationMessageFor(model => model.descripcion, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    @if (Model.ubicacion != null)
                    {
                        <div class="form-group">
                            @Html.LabelFor(model => model.ubicacion, "Ubicación:", htmlAttributes: new { @class = "control-label col-md-2" })
                            <div class="col-md-10">
                                @Html.EditorFor(model => model.ubicacion, new { htmlAttributes = new { @class = "form-control", @disabled = "disabled" } })
                                @Html.ValidationMessageFor(model => model.ubicacion, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    }

                    <div class="form-group">
                        @Html.LabelFor(model => model.observacion, "Observación:", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.observacion, 10, 62, new { @class = "form-control", @disabled = "disabled" })
                            @Html.ValidationMessageFor(model => model.observacion, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group" id="file">
                        <label class="control-label col-md-2">Adjuntar archivos:</label>
                        <div class="col-md-10">
                            <input class="form-control" type="file" name="elementName" multiple="multiple" disabled="disabled" />
                        </div>
                    </div>
                </div>
                    <div class="modal-footer">
                        <div class="col-md-offset-2 col-md-10">
                            <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>