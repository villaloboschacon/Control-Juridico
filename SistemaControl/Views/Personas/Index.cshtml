@model PagedList.IPagedList<BackEnd.Model.Persona>
@{

    ViewBag.Title = "Index";
}

@using PagedList.Mvc;

<script src="~/Content/js/site.js"></script>
<link href="~/Content/css/style.css" rel="stylesheet" />
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
<div class="title">Personas Jurídicas</div>
<div class="container" style="margin-top:20px">
    @using (Html.BeginForm("Index", "Personas", FormMethod.Get))
    {
        @*<div>
                @Html.TextBox("search") <input type="submit" name="submit" value="Buscar" />
            </div>
            <div>
                <b> Opciones de busqueda: </b>
                @Html.RadioButton("option", "Nombre") <text>Nombre</text>
                @Html.RadioButton("option", "Cédula") <text> Cédula </text>
                @Html.RadioButton("option", "Representante legal")<text>Representante legal</text>
                @Html.RadioButton("option", "Representante social")<text>Representante social</text>
            </div>*@
        <div class="widget" style="height:100px;">
            <div class="title">
                <span class="form-inline">
                    <i class="fa fa-search" aria-hidden="true"></i>
                    @Html.TextBox("search")  <input type="submit" name="submit" value="Buscar" style="color:black; font-size:14px;" />
                </span>

                <div style="color:black; font-size:14px;">
                    <b> Opciones de búsqueda: </b>
                    @Html.RadioButton("option", "Cédula") <text>Cédula</text>
                    @Html.RadioButton("option", "Nombreo") <text> Nombre </text>
                    @Html.RadioButton("option", "Representante legal") <text>Representante legal</text>
                    @Html.RadioButton("option", "Representante social") <text>Representante social </text>

                </div>
            </div>
        </div>
    }

    <table class="table table-bordered">
        <tr class="trfirst">
            <th>Cédula</th>
            <th>Nombre</th>
            <th>Representante Legal</th>
            <th>Representante Social</th>
            <th>Correo</th>
            <th>Observación</th>
            <th></th>
        </tr>
        @if (Model.Count() == 0)
        {
            <tr>
                <td align="center" colspan="8">No se encontraron coincidencias</td>
            </tr>
        }
        else
        {
            for (int i = 0; i < Model.Count(); i++)
            {
                <tr>
                    <td>
                        @Model[i].cedula
                    </td>
                    <td>
                        @Model[i].nombreCompleto
                    </td>
                    <td>
                        @Model[i].RepresentanteLegal
                    </td>
                    <td>
                        @Model[i].RepresentanteSocial
                    </td>
                    <td>
                        @Model[i].correo
                    </td>
                    <td>
                        @Model[i].observacion
                    </td>
                    <td>
                        <a href="#" id="btnEdit" class="btnEdit" data-value="@Model[i].idPersona" data-toggle="modal" data-target="#editarModal">Editar</a>
                    </td>
                </tr>

            }
        }
    </table>
    <br />
    <!-- Modal -->
    <div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true" style="position: fixed">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <form id="role-form" method="get">
                    <div class="modal-header">
                        <span class="modal-title" id="exampleModalLabel">Editar persona</span>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div id="contenidoModal">
                            @using (Html.BeginForm())
                            {
                                @Html.AntiForgeryToken()
                                int i = 0;
                                <div class="form-horizontal">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    @Html.HiddenFor(model => model[i].idPersona)

                                    <div class="form-group">
                                        @Html.LabelFor(model => model[i].nombreCompleto, "Nombre completo:", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model[i].nombreCompleto, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model[i].nombreCompleto, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model[i].cedula, "Cédula:", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model[i].cedula, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model[i].cedula, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model[i].idTipo, "Tipo de persona", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.DropDownList("idTipo", null, htmlAttributes: new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model[i].idTipo, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model[i].RepresentanteSocial, "Representante Social:", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model[i].RepresentanteSocial, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model[i].RepresentanteSocial, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model[i].RepresentanteLegal, "Representante Legal:", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model[i].RepresentanteLegal, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model[i].RepresentanteLegal, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model[i].correo, "Correo:", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model[i].correo, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model[i].correo, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model[i].observacion, "Observación:", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.TextAreaFor(model => model[i].observacion, 10, 62, new { @class = "form-control", @style = "resize: vertical;min-height: 200px;" })
                                            @Html.ValidationMessageFor(model => model[i].observacion, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            }
                            <div class="form-group">
                                <input type="file" name="elementName" multiple="multiple" />
                            </div>
                        </div>
                    </div>
                </form>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary"><a style="color:white;" href="/Personas/Index">Cerrar</a></button>
                    <button type="button" class="btn btn-primary"><a style="color:white;" href="/Personas/Index">Guardar persona</a></button>
                </div>
            </div>
        </div>
    </div>

    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, pageSize = Model.PageSize }))
    Mostrando @Model.FirstItemOnPage de @Model.LastItemOnPage de @Model.TotalItemCount personas
    <div>
        <button type="button" class="btn btn-primary"><a href="#" id="btnEdit" style="color:white" class="btnEdit" data-value="@Model[0].idPersona" data-toggle="modal" data-target="#modalAgregar">Agregar persona</a></button>
    </div>

    <div class="modal fade" id="modalAgregar" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true" style="position: absolute">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <span class="modal-title" id="exampleModalLabel">Agregar persona</span>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div id="contenidoModal">
                        @using (Html.BeginForm())
                        {
                            @Html.AntiForgeryToken()
                            int i = 0;
                            <div class="form-horizontal">
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                @Html.HiddenFor(model => model[i].idPersona)

                                <div class="form-group">
                                    @Html.LabelFor(model => model[i].nombreCompleto, "Nombre completo:", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model[i].nombreCompleto, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model[i].nombreCompleto, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model[i].cedula, "Cédula:", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model[i].cedula, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model[i].cedula, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model[i].idTipo, "Tipo de persona", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.DropDownList("idTipo", null, htmlAttributes: new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model[i].idTipo, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                                <div class="form-group">
                                    @Html.LabelFor(model => model[i].RepresentanteSocial, "Representante Social:", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model[i].RepresentanteSocial, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model[i].RepresentanteSocial, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model[i].RepresentanteLegal, "Representante Legal:", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model[i].RepresentanteLegal, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model[i].RepresentanteLegal, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model[i].correo, "Correo:", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.EditorFor(model => model[i].correo, new { htmlAttributes = new { @class = "form-control" } })
                                        @Html.ValidationMessageFor(model => model[i].correo, "", new { @class = "text-danger" })
                                    </div>
                                </div>

                                <div class="form-group">
                                    @Html.LabelFor(model => model[i].observacion, "Observación:", htmlAttributes: new { @class = "control-label col-md-2" })
                                    <div class="col-md-10">
                                        @Html.TextAreaFor(model => model[i].observacion, 10, 62, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model[i].observacion, "", new { @class = "text-danger" })
                                    </div>
                                </div>
                            </div>
                        }
                        <div class="form-group">
                            <input type="file" name="elementName" multiple="multiple" />
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-primary"><a style="color:white;" href="/Personas/Index">Cerrar</a></button>
                    <button type="button" class="btn btn-primary"><a style="color:white;" href="/Personas/Index">Guardar cambios</a></button>
                </div>
            </div>
        </div>
    </div>
</div>
<script type="text/javascript">
    function SelectedIndexChanged() {
        //Form post
        document.demoForm.submit();
    }

    $(document).ready(function () {
        $(".btnEdit").click(function () {
            var id = $(this).data("value");
            $("#contenidoModal").load("/Personas/Details/" + id, function () {
                $("#myModal").modal("show");
            });
        });
    });
</script>