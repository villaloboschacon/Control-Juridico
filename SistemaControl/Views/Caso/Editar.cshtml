@model BackEnd.Model.Caso
@Scripts.Render("~/bundles/jqueryval")

<div class="modal-dialog" role="document">
    <div class="modal-content">
        <div class="modal-header">
            <span class="modal-title" id="exampleModalLabel" style="text-align:center;">Editar caso</span>
            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                <span aria-hidden="true">&times;</span>
            </button>
        </div>
        <div class="modal-body">
            <div id="contenidoModal">
                @using (Html.BeginForm("EditarCaso", "Caso"))
                {
                    @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    @Html.HiddenFor(model => model.idCaso)

                    <div class="form-group">
                        @Html.LabelFor(model => model.idTipo, "Tipo de Proceso:", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("idTipo", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.idTipo, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.idPersona, "Persona:", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("idPersona", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.idPersona, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.idUsuario, "Abogado:", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("idUsuario", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.idUsuario, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.idEstado, "Estado del Caso:", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("idEstado", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.idEstado, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.tipoLitigante, "Tipo de Litigante:", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownList("tipoLitigante", null, htmlAttributes: new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.tipoLitigante, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.numeroCaso, "Número de Proceso:", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.numeroCaso, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.numeroCaso, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.materia, "Materia:", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.materia, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.materia, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.descripcion, "Descripción:", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.descripcion, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.descripcion, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.observacion, "Observación:", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.TextAreaFor(model => model.observacion, 10, 62, new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.observacion, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
                    <div class="modal-footer">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Actualizar caso" class="btn btn-default" />
                            <button type="button" class="btn btn-default" data-dismiss="modal">Cerrar</button>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>


<script type="text/javascript">

    $(document).ready(function() {

    });

    $("#idTipo").change(function () {
            $("#idPersona").empty();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("GetTipoPersona")', // we are calling json method
                dataType: 'json',
                data: { id: $("#idTipo").val() },
                success: function (origins) {
                    var another = origins.Data;
                    console.log(another[0].Value);
                    $.each(another, function (i, state) {
                        $("#idPersona").append('<option value="' + state.Value + '">' + state.Text + '</option>');
                    });
                },
                error: function (ex) {
                    alert('Failed to retrieve states.' + ex);
                }
            });
            return false;
        });
</script>