@model PagedList.IPagedList<BackEnd.Model.Caso>
@using PagedList.Mvc;
@{
    ViewBag.Title = "Index";
}

<script src="https://code.jquery.com/jquery-1.12.4.js"></script>
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>


<link type="text/css" href="//code.jquery.com/ui/1.11.3/themes/smoothness/jquery-ui.css" rel="stylesheet" />
<script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
<script src="~/Scripts/jquery-ui-1.12.1.js"></script>
@*SCRIPT PARA EL EDITOR DE TEXTO*@
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.3/jquery.min.js"></script>
<link href="http://code.jquery.com/ui/1.10.2/themes/smoothness/jquery-ui.css" rel="Stylesheet"></>
<script src="http://code.jquery.com/ui/1.10.2/jquery-ui.js"></script>
<link href="~/Content/css/style.css" rel="stylesheet" />
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">
@*<script src="~/Content/ckeditor2/ckeditor.js"></script>*@
<script src="~/Content/js/site.js"></script>
<script src="~/Content/js/CrearJS.js"></script>

<script src="~/Scripts/jquery-3.3.1.js"></script>
<script src="~/Scripts/jquery-ui-1.12.1.js"></script>
<script src="~/Scripts/jquery-ui-1.12.1.min.js"></script>
@*<script src="~/Scripts/jquery.unobtrusive-ajax.js"></script>*@

@*<script src="~/Content/js/site.js"></script>
    <link href="~/Content/css/style.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css">*@
<div class="title">Proceso Administrativo</div>
<div class="container" style="margin-top:20px">
    @using (Html.BeginForm("Index", "Caso", FormMethod.Get))
    {
        @*<div>
                @Html.TextBox("search") <input type="submit" name="submit" value="Buscar" />
            </div>
            <div>
                <b> Opciones de busqueda: </b>
                @Html.RadioButton("option", "Persona") <text>Persona </text>
                @Html.RadioButton("option", "Estado") <text>Estado</text>
                @Html.RadioButton("option", "Numero de proceso") <text>Numero de proceso</text>
                @Html.RadioButton("option", "Materia") <text>Materia</text>

            </div>*@
        <div class="widget" style="height:100px;">
            <div class="title">
                <span class="form-inline">
                    <i class="fa fa-search" aria-hidden="true"></i>
                    @Html.TextBox("search") <input type="submit" name="submit" value="Buscar" style="color:black; font-size:14px;" />
                </span>

                <div style="color:black; font-size:14px;">
                    <b> Opciones de busqueda: </b>
                    @Html.RadioButton("option", "Persona") <text>Persona</text>
                    @Html.RadioButton("option", "Abogado") <text>Abogado</text>
                    @Html.RadioButton("option", "Número de proceso") <text>Número de proceso</text>
                    @Html.RadioButton("option", "Estado") <text>Estado </text>
                    @Html.RadioButton("option", "Materia") <text>Materia </text>

                </div>
            </div>
        </div>
    }

    <table class="table table-bordered">
        <tr>
            <th>
                @Html.ActionLink("Número de proceso", "Index", new { sortOrder = ViewBag.NumeroCaso })
            </th>
            <th>Abogado</th>
            <th>Materia</th>
            <th>Persona</th>
            <th>Tipo de Proceso</th>
            <th>Tipo de Litigio</th>
            <th>Estado</th>
            @*<th>Descripción</th>
                <th>Observación</th>*@
            <th></th>
        </tr>
        @if (Model.Count() == 0)
        {
            <tr>
                <td align="center" colspan="8">No se encontraron coincidencias</td>
            </tr>
        }
        else
        {
            foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.numeroCaso)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Usuario.nombre)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.materia)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Persona.nombreCompleto)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TablaGeneral1.descripcion)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TablaGeneral2.descripcion)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TablaGeneral.descripcion)
                    </td>
                    @*<td>
                            @Html.DisplayFor(modelItem => item.descripcion)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.observacion)
                        </td>*@
                    <td><a href="#" id="btnEdit" class="btnEdit" onclick="Edit(@item.idCaso)" data-id="@item.idCaso" data-toggle="modal" data-target="#editarModal">Editar</a></td>
                </tr>

            }
        }
    </table>
    <br />

    <!-- Modal -->
    @*<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true" style="position: fixed">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <span class="modal-title" id="exampleModalLabel">Editar proceso</span>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div id="contenidoModal">
                            @using (Html.BeginForm())
                            {
                                @Html.AntiForgeryToken()
                                int i = 0;
                                <div class="form-horizontal">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    @Html.HiddenFor(model => model[i].idCaso)

                                    <div class="form-group">
                                        @Html.LabelFor(model => model[i].idPersona, "Persona:", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model[i].idPersona, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model[i].idPersona, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model[i].idUsuario, "Abogados", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.DropDownList("idUsuario", null, htmlAttributes: new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model[i].idUsuario, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model[i].idTipo, "Estado:", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.DropDownList("idTipo", null, htmlAttributes: new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model[i].idTipo, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model[i].tipoLitigante, "Tipo de litigante:", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.DropDownList("tipoLitigante", null, htmlAttributes: new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model[i].tipoLitigante, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model[i].numeroCaso, "Numero de proceso:", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model[i].numeroCaso, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model[i].numeroCaso, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model[i].descripcion, "Descripción:", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model[i].descripcion, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model[i].descripcion, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model[i].materia, "Materia:", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model[i].materia, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model[i].materia, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model[i].descripcion, "Descripción:", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.TextAreaFor(model => model[i].descripcion, 10, 62, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model[i].descripcion, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model[i].observacion, "Observación:", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.TextAreaFor(model => model[i].observacion, 10, 62, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model[i].observacion, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            }
                            <input type="file" name="elementName" multiple="multiple" />

                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary"><a style="color:white;" href="/Caso/Index">Cerrar</a></button>
                        <button type="button" class="btn btn-primary"><a style="color:white;" href="/Caso/Index">Guardar cambios</a></button>
                    </div>
                </div>
            </div>
        </div>*@

    <div>
        <a href="#" id="btnEdit" class="btnEdit" onclick="Crear()" data-toggle="modal" data-target="#crearModal">Agregar proceso</a>
    </div>

    @Html.PagedListPager(Model, page => Url.Action("Index", new { page, pageSize = Model.PageSize }))
    Mostrando @Model.FirstItemOnPage de @Model.LastItemOnPage de @Model.TotalItemCount procesos



    @*<div class="modal fade" id="modalAgregar" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true" style="position: absolute">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <span class="modal-title" id="exampleModalLabel">Agregar nuevo proceso</span>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">&times;</span>
                        </button>
                    </div>
                    <div class="modal-body">
                        <div id="contenidoModal">
                            @using (Html.BeginForm())
                            {
                                @Html.AntiForgeryToken()
                                int i = 0;
                                <div class="form-horizontal">
                                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                    @Html.HiddenFor(model => model[i].idCaso)

                                    <div class="form-group">
                                        @Html.LabelFor(model => model[i].idPersona, "Persona:", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model[i].idPersona, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model[i].idPersona, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model[i].idUsuario, "Abogados", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.DropDownList("idUsuario", null, htmlAttributes: new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model[i].idUsuario, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model[i].idTipo, "Estado:", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.DropDownList("idTipo", null, htmlAttributes: new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model[i].idTipo, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model[i].tipoLitigante, "Tipo de litigante:", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.DropDownList("tipoLitigante", null, htmlAttributes: new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model[i].tipoLitigante, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model[i].numeroCaso, "Numero de proceso:", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model[i].numeroCaso, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model[i].numeroCaso, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model[i].descripcion, "Descripción:", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model[i].descripcion, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model[i].descripcion, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model[i].materia, "Materia:", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.EditorFor(model => model[i].materia, new { htmlAttributes = new { @class = "form-control" } })
                                            @Html.ValidationMessageFor(model => model[i].materia, "", new { @class = "text-danger" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        @Html.LabelFor(model => model[i].descripcion, "Descripción:", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.TextAreaFor(model => model[i].descripcion, 10, 62, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model[i].descripcion, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        @Html.LabelFor(model => model[i].observacion, "Observación:", htmlAttributes: new { @class = "control-label col-md-2" })
                                        <div class="col-md-10">
                                            @Html.TextAreaFor(model => model[i].observacion, 10, 62, new { @class = "form-control" })
                                            @Html.ValidationMessageFor(model => model[i].observacion, "", new { @class = "text-danger" })
                                        </div>
                                    </div>
                                </div>
                            }
                            <input type="file" name="elementName" multiple="multiple" />

                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-primary"><a style="color:white;" href="/Caso/Index">Cerrar</a></button>
                        <button type="button" class="btn btn-primary"><a style="color:white;" href="/Caso/Index">Guardar cambios</a></button>
                    </div>
                </div>
            </div>
        </div>*@
</div>

<div id="editarModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="editarModal" aria-hidden="true" style="position: fixed"></div>
<div id="crearModal" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="crearModal" aria-hidden="true" style="position: fixed"></div>

<script>

    function Crear() {
        var url = '@Url.Action("Crear")';
        $.ajax({
            url: url,
            datatype: "json",
            type: "post",
            contenttype: 'application/json; charset=utf-8',
            async: true,
            success: function (data) {
                $("#crearModal").html(data);
            },
            error: function (xhr) {
                alert('Error a la hora de abrir el modal.');
            }
        });
    }

    function Edit(idcaso) {
        var url = '@Url.Action("Editar")';
        var myId = idcaso;
        $.ajax({
            url: url,
            datatype: "json",
            type: "post",
            data: {
                'id': idcaso
            },
            contenttype: 'application/json; charset=utf-8',
            async: true,
            success: function (data) {

                $("#editarModal").html(data);
            },
            error: function (xhr) {
                alert('error');
            }
        });
    }
</script>
<script type="text/javascript">
    $(function () {
        // Initialize numeric spinner input boxes
        //$(".numeric-spinner").spinedit();
        // Initialize modal dialog
        // attach modal-container bootstrap attributes to links with .modal-link class.
        // when a link is clicked with these attributes, bootstrap will display the href content in a modal dialog.
        $('body').on('click', '.modal-link', function (e) {
            e.preventDefault();
            $(this).attr('data-target', '#modal-container');
            $(this).attr('data-toggle', 'modal');
        });
        // Attach listener to .modal-close-btn's so that when the button is pressed the modal dialog disappears
        $('body').on('click', '.modal-close-btn', function () {
            $('#modal-container').modal('hide');
        });
        //clear modal cache, so that new content can be loaded
        $('#modal-container').on('hidden.bs.modal', function () {
            $(this).removeData('bs.modal');
        });
        $('#CancelModal').on('click', function () {
            return false;
        });
    });
</script>